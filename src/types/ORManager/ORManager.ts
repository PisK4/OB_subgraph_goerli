// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class ChainInfoUpdated extends ethereum.Event {
  get params(): ChainInfoUpdated__Params {
    return new ChainInfoUpdated__Params(this);
  }
}

export class ChainInfoUpdated__Params {
  _event: ChainInfoUpdated;

  constructor(event: ChainInfoUpdated) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get chainInfo(): ChainInfoUpdatedChainInfoStruct {
    return changetype<ChainInfoUpdatedChainInfoStruct>(
      this._event.parameters[1].value.toTuple()
    );
  }
}

export class ChainInfoUpdatedChainInfoStruct extends ethereum.Tuple {
  get id(): BigInt {
    return this[0].toBigInt();
  }

  get batchLimit(): BigInt {
    return this[1].toBigInt();
  }

  get minVerifyChallengeSourceTxSecond(): BigInt {
    return this[2].toBigInt();
  }

  get maxVerifyChallengeSourceTxSecond(): BigInt {
    return this[3].toBigInt();
  }

  get minVerifyChallengeDestTxSecond(): BigInt {
    return this[4].toBigInt();
  }

  get maxVerifyChallengeDestTxSecond(): BigInt {
    return this[5].toBigInt();
  }

  get spvs(): Array<Address> {
    return this[6].toAddressArray();
  }
}

export class ChainTokenUpdated extends ethereum.Event {
  get params(): ChainTokenUpdated__Params {
    return new ChainTokenUpdated__Params(this);
  }
}

export class ChainTokenUpdated__Params {
  _event: ChainTokenUpdated;

  constructor(event: ChainTokenUpdated) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get tokenInfo(): ChainTokenUpdatedTokenInfoStruct {
    return changetype<ChainTokenUpdatedTokenInfoStruct>(
      this._event.parameters[1].value.toTuple()
    );
  }
}

export class ChainTokenUpdatedTokenInfoStruct extends ethereum.Tuple {
  get token(): BigInt {
    return this[0].toBigInt();
  }

  get mainnetToken(): Address {
    return this[1].toAddress();
  }

  get decimals(): i32 {
    return this[2].toI32();
  }
}

export class ChallengeUserRatioUpdated extends ethereum.Event {
  get params(): ChallengeUserRatioUpdated__Params {
    return new ChallengeUserRatioUpdated__Params(this);
  }
}

export class ChallengeUserRatioUpdated__Params {
  _event: ChallengeUserRatioUpdated;

  constructor(event: ChallengeUserRatioUpdated) {
    this._event = event;
  }

  get challengeUserRatio(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class EbcsUpdated extends ethereum.Event {
  get params(): EbcsUpdated__Params {
    return new EbcsUpdated__Params(this);
  }
}

export class EbcsUpdated__Params {
  _event: EbcsUpdated;

  constructor(event: EbcsUpdated) {
    this._event = event;
  }

  get ebcs(): Array<Address> {
    return this._event.parameters[0].value.toAddressArray();
  }

  get statuses(): Array<boolean> {
    return this._event.parameters[1].value.toBooleanArray();
  }
}

export class FeeChallengeSecondUpdated extends ethereum.Event {
  get params(): FeeChallengeSecondUpdated__Params {
    return new FeeChallengeSecondUpdated__Params(this);
  }
}

export class FeeChallengeSecondUpdated__Params {
  _event: FeeChallengeSecondUpdated;

  constructor(event: FeeChallengeSecondUpdated) {
    this._event = event;
  }

  get feeChallengeSecond(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class FeeTakeOnChallengeSecondUpdated extends ethereum.Event {
  get params(): FeeTakeOnChallengeSecondUpdated__Params {
    return new FeeTakeOnChallengeSecondUpdated__Params(this);
  }
}

export class FeeTakeOnChallengeSecondUpdated__Params {
  _event: FeeTakeOnChallengeSecondUpdated;

  constructor(event: FeeTakeOnChallengeSecondUpdated) {
    this._event = event;
  }

  get feeTakeOnChallengeSecond(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class MaxMDCLimitUpdated extends ethereum.Event {
  get params(): MaxMDCLimitUpdated__Params {
    return new MaxMDCLimitUpdated__Params(this);
  }
}

export class MaxMDCLimitUpdated__Params {
  _event: MaxMDCLimitUpdated;

  constructor(event: MaxMDCLimitUpdated) {
    this._event = event;
  }

  get maxMDCLimit(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class MinChallengeRatioUpdated extends ethereum.Event {
  get params(): MinChallengeRatioUpdated__Params {
    return new MinChallengeRatioUpdated__Params(this);
  }
}

export class MinChallengeRatioUpdated__Params {
  _event: MinChallengeRatioUpdated;

  constructor(event: MinChallengeRatioUpdated) {
    this._event = event;
  }

  get minChallengeRatio(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class ProtocolFeeUpdated extends ethereum.Event {
  get params(): ProtocolFeeUpdated__Params {
    return new ProtocolFeeUpdated__Params(this);
  }
}

export class ProtocolFeeUpdated__Params {
  _event: ProtocolFeeUpdated;

  constructor(event: ProtocolFeeUpdated) {
    this._event = event;
  }

  get protocolFee(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class SubmitterFeeUpdated extends ethereum.Event {
  get params(): SubmitterFeeUpdated__Params {
    return new SubmitterFeeUpdated__Params(this);
  }
}

export class SubmitterFeeUpdated__Params {
  _event: SubmitterFeeUpdated;

  constructor(event: SubmitterFeeUpdated) {
    this._event = event;
  }

  get submitter(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class ORManager__getChainInfoResultValue0Struct extends ethereum.Tuple {
  get id(): BigInt {
    return this[0].toBigInt();
  }

  get batchLimit(): BigInt {
    return this[1].toBigInt();
  }

  get minVerifyChallengeSourceTxSecond(): BigInt {
    return this[2].toBigInt();
  }

  get maxVerifyChallengeSourceTxSecond(): BigInt {
    return this[3].toBigInt();
  }

  get minVerifyChallengeDestTxSecond(): BigInt {
    return this[4].toBigInt();
  }

  get maxVerifyChallengeDestTxSecond(): BigInt {
    return this[5].toBigInt();
  }

  get spvs(): Array<Address> {
    return this[6].toAddressArray();
  }
}

export class ORManager__getChainTokenInfoResultValue0Struct extends ethereum.Tuple {
  get token(): BigInt {
    return this[0].toBigInt();
  }

  get mainnetToken(): Address {
    return this[1].toAddress();
  }

  get decimals(): i32 {
    return this[2].toI32();
  }
}

export class ORManager extends ethereum.SmartContract {
  static bind(address: Address): ORManager {
    return new ORManager("ORManager", address);
  }

  challengeUserRatio(): BigInt {
    let result = super.call(
      "challengeUserRatio",
      "challengeUserRatio():(uint64)",
      []
    );

    return result[0].toBigInt();
  }

  try_challengeUserRatio(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "challengeUserRatio",
      "challengeUserRatio():(uint64)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  ebcIncludes(ebc: Address): boolean {
    let result = super.call("ebcIncludes", "ebcIncludes(address):(bool)", [
      ethereum.Value.fromAddress(ebc)
    ]);

    return result[0].toBoolean();
  }

  try_ebcIncludes(ebc: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("ebcIncludes", "ebcIncludes(address):(bool)", [
      ethereum.Value.fromAddress(ebc)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  feeChallengeSecond(): BigInt {
    let result = super.call(
      "feeChallengeSecond",
      "feeChallengeSecond():(uint64)",
      []
    );

    return result[0].toBigInt();
  }

  try_feeChallengeSecond(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "feeChallengeSecond",
      "feeChallengeSecond():(uint64)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  feeTakeOnChallengeSecond(): BigInt {
    let result = super.call(
      "feeTakeOnChallengeSecond",
      "feeTakeOnChallengeSecond():(uint64)",
      []
    );

    return result[0].toBigInt();
  }

  try_feeTakeOnChallengeSecond(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "feeTakeOnChallengeSecond",
      "feeTakeOnChallengeSecond():(uint64)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getChainInfo(id: BigInt): ORManager__getChainInfoResultValue0Struct {
    let result = super.call(
      "getChainInfo",
      "getChainInfo(uint64):((uint64,uint192,uint64,uint64,uint64,uint64,address[]))",
      [ethereum.Value.fromUnsignedBigInt(id)]
    );

    return changetype<ORManager__getChainInfoResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_getChainInfo(
    id: BigInt
  ): ethereum.CallResult<ORManager__getChainInfoResultValue0Struct> {
    let result = super.tryCall(
      "getChainInfo",
      "getChainInfo(uint64):((uint64,uint192,uint64,uint64,uint64,uint64,address[]))",
      [ethereum.Value.fromUnsignedBigInt(id)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<ORManager__getChainInfoResultValue0Struct>(value[0].toTuple())
    );
  }

  getChainTokenInfo(
    id: BigInt,
    token: BigInt
  ): ORManager__getChainTokenInfoResultValue0Struct {
    let result = super.call(
      "getChainTokenInfo",
      "getChainTokenInfo(uint64,uint256):((uint256,address,uint8))",
      [
        ethereum.Value.fromUnsignedBigInt(id),
        ethereum.Value.fromUnsignedBigInt(token)
      ]
    );

    return changetype<ORManager__getChainTokenInfoResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_getChainTokenInfo(
    id: BigInt,
    token: BigInt
  ): ethereum.CallResult<ORManager__getChainTokenInfoResultValue0Struct> {
    let result = super.tryCall(
      "getChainTokenInfo",
      "getChainTokenInfo(uint64,uint256):((uint256,address,uint8))",
      [
        ethereum.Value.fromUnsignedBigInt(id),
        ethereum.Value.fromUnsignedBigInt(token)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<ORManager__getChainTokenInfoResultValue0Struct>(
        value[0].toTuple()
      )
    );
  }

  maxMDCLimit(): BigInt {
    let result = super.call("maxMDCLimit", "maxMDCLimit():(uint64)", []);

    return result[0].toBigInt();
  }

  try_maxMDCLimit(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("maxMDCLimit", "maxMDCLimit():(uint64)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  minChallengeRatio(): BigInt {
    let result = super.call(
      "minChallengeRatio",
      "minChallengeRatio():(uint64)",
      []
    );

    return result[0].toBigInt();
  }

  try_minChallengeRatio(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "minChallengeRatio",
      "minChallengeRatio():(uint64)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  protocolFee(): BigInt {
    let result = super.call("protocolFee", "protocolFee():(uint64)", []);

    return result[0].toBigInt();
  }

  try_protocolFee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("protocolFee", "protocolFee():(uint64)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  storageVersion(): BigInt {
    let result = super.call("storageVersion", "storageVersion():(uint256)", []);

    return result[0].toBigInt();
  }

  try_storageVersion(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "storageVersion",
      "storageVersion():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  submitter(): Address {
    let result = super.call("submitter", "submitter():(address)", []);

    return result[0].toAddress();
  }

  try_submitter(): ethereum.CallResult<Address> {
    let result = super.tryCall("submitter", "submitter():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get owner_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class RegisterChainsCall extends ethereum.Call {
  get inputs(): RegisterChainsCall__Inputs {
    return new RegisterChainsCall__Inputs(this);
  }

  get outputs(): RegisterChainsCall__Outputs {
    return new RegisterChainsCall__Outputs(this);
  }
}

export class RegisterChainsCall__Inputs {
  _call: RegisterChainsCall;

  constructor(call: RegisterChainsCall) {
    this._call = call;
  }

  get chains_(): Array<RegisterChainsCallChains_Struct> {
    return this._call.inputValues[0].value.toTupleArray<
      RegisterChainsCallChains_Struct
    >();
  }
}

export class RegisterChainsCall__Outputs {
  _call: RegisterChainsCall;

  constructor(call: RegisterChainsCall) {
    this._call = call;
  }
}

export class RegisterChainsCallChains_Struct extends ethereum.Tuple {
  get id(): BigInt {
    return this[0].toBigInt();
  }

  get batchLimit(): BigInt {
    return this[1].toBigInt();
  }

  get minVerifyChallengeSourceTxSecond(): BigInt {
    return this[2].toBigInt();
  }

  get maxVerifyChallengeSourceTxSecond(): BigInt {
    return this[3].toBigInt();
  }

  get minVerifyChallengeDestTxSecond(): BigInt {
    return this[4].toBigInt();
  }

  get maxVerifyChallengeDestTxSecond(): BigInt {
    return this[5].toBigInt();
  }

  get spvs(): Array<Address> {
    return this[6].toAddressArray();
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UpdateChainSpvsCall extends ethereum.Call {
  get inputs(): UpdateChainSpvsCall__Inputs {
    return new UpdateChainSpvsCall__Inputs(this);
  }

  get outputs(): UpdateChainSpvsCall__Outputs {
    return new UpdateChainSpvsCall__Outputs(this);
  }
}

export class UpdateChainSpvsCall__Inputs {
  _call: UpdateChainSpvsCall;

  constructor(call: UpdateChainSpvsCall) {
    this._call = call;
  }

  get id(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get spvs(): Array<Address> {
    return this._call.inputValues[1].value.toAddressArray();
  }

  get indexs(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }
}

export class UpdateChainSpvsCall__Outputs {
  _call: UpdateChainSpvsCall;

  constructor(call: UpdateChainSpvsCall) {
    this._call = call;
  }
}

export class UpdateChainTokensCall extends ethereum.Call {
  get inputs(): UpdateChainTokensCall__Inputs {
    return new UpdateChainTokensCall__Inputs(this);
  }

  get outputs(): UpdateChainTokensCall__Outputs {
    return new UpdateChainTokensCall__Outputs(this);
  }
}

export class UpdateChainTokensCall__Inputs {
  _call: UpdateChainTokensCall;

  constructor(call: UpdateChainTokensCall) {
    this._call = call;
  }

  get ids(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }

  get tokenInfos(): Array<UpdateChainTokensCallTokenInfosStruct> {
    return this._call.inputValues[1].value.toTupleArray<
      UpdateChainTokensCallTokenInfosStruct
    >();
  }
}

export class UpdateChainTokensCall__Outputs {
  _call: UpdateChainTokensCall;

  constructor(call: UpdateChainTokensCall) {
    this._call = call;
  }
}

export class UpdateChainTokensCallTokenInfosStruct extends ethereum.Tuple {
  get token(): BigInt {
    return this[0].toBigInt();
  }

  get mainnetToken(): Address {
    return this[1].toAddress();
  }

  get decimals(): i32 {
    return this[2].toI32();
  }
}

export class UpdateChallengeUserRatioCall extends ethereum.Call {
  get inputs(): UpdateChallengeUserRatioCall__Inputs {
    return new UpdateChallengeUserRatioCall__Inputs(this);
  }

  get outputs(): UpdateChallengeUserRatioCall__Outputs {
    return new UpdateChallengeUserRatioCall__Outputs(this);
  }
}

export class UpdateChallengeUserRatioCall__Inputs {
  _call: UpdateChallengeUserRatioCall;

  constructor(call: UpdateChallengeUserRatioCall) {
    this._call = call;
  }

  get challengeUserRatio_(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class UpdateChallengeUserRatioCall__Outputs {
  _call: UpdateChallengeUserRatioCall;

  constructor(call: UpdateChallengeUserRatioCall) {
    this._call = call;
  }
}

export class UpdateEbcsCall extends ethereum.Call {
  get inputs(): UpdateEbcsCall__Inputs {
    return new UpdateEbcsCall__Inputs(this);
  }

  get outputs(): UpdateEbcsCall__Outputs {
    return new UpdateEbcsCall__Outputs(this);
  }
}

export class UpdateEbcsCall__Inputs {
  _call: UpdateEbcsCall;

  constructor(call: UpdateEbcsCall) {
    this._call = call;
  }

  get ebcs_(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get statuses(): Array<boolean> {
    return this._call.inputValues[1].value.toBooleanArray();
  }
}

export class UpdateEbcsCall__Outputs {
  _call: UpdateEbcsCall;

  constructor(call: UpdateEbcsCall) {
    this._call = call;
  }
}

export class UpdateFeeChallengeSecondCall extends ethereum.Call {
  get inputs(): UpdateFeeChallengeSecondCall__Inputs {
    return new UpdateFeeChallengeSecondCall__Inputs(this);
  }

  get outputs(): UpdateFeeChallengeSecondCall__Outputs {
    return new UpdateFeeChallengeSecondCall__Outputs(this);
  }
}

export class UpdateFeeChallengeSecondCall__Inputs {
  _call: UpdateFeeChallengeSecondCall;

  constructor(call: UpdateFeeChallengeSecondCall) {
    this._call = call;
  }

  get feeChallengeSecond_(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class UpdateFeeChallengeSecondCall__Outputs {
  _call: UpdateFeeChallengeSecondCall;

  constructor(call: UpdateFeeChallengeSecondCall) {
    this._call = call;
  }
}

export class UpdateFeeTakeOnChallengeSecondCall extends ethereum.Call {
  get inputs(): UpdateFeeTakeOnChallengeSecondCall__Inputs {
    return new UpdateFeeTakeOnChallengeSecondCall__Inputs(this);
  }

  get outputs(): UpdateFeeTakeOnChallengeSecondCall__Outputs {
    return new UpdateFeeTakeOnChallengeSecondCall__Outputs(this);
  }
}

export class UpdateFeeTakeOnChallengeSecondCall__Inputs {
  _call: UpdateFeeTakeOnChallengeSecondCall;

  constructor(call: UpdateFeeTakeOnChallengeSecondCall) {
    this._call = call;
  }

  get feeTakeOnChallengeSecond_(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class UpdateFeeTakeOnChallengeSecondCall__Outputs {
  _call: UpdateFeeTakeOnChallengeSecondCall;

  constructor(call: UpdateFeeTakeOnChallengeSecondCall) {
    this._call = call;
  }
}

export class UpdateMaxMDCLimitCall extends ethereum.Call {
  get inputs(): UpdateMaxMDCLimitCall__Inputs {
    return new UpdateMaxMDCLimitCall__Inputs(this);
  }

  get outputs(): UpdateMaxMDCLimitCall__Outputs {
    return new UpdateMaxMDCLimitCall__Outputs(this);
  }
}

export class UpdateMaxMDCLimitCall__Inputs {
  _call: UpdateMaxMDCLimitCall;

  constructor(call: UpdateMaxMDCLimitCall) {
    this._call = call;
  }

  get maxMDCLimit_(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class UpdateMaxMDCLimitCall__Outputs {
  _call: UpdateMaxMDCLimitCall;

  constructor(call: UpdateMaxMDCLimitCall) {
    this._call = call;
  }
}

export class UpdateMinChallengeRatioCall extends ethereum.Call {
  get inputs(): UpdateMinChallengeRatioCall__Inputs {
    return new UpdateMinChallengeRatioCall__Inputs(this);
  }

  get outputs(): UpdateMinChallengeRatioCall__Outputs {
    return new UpdateMinChallengeRatioCall__Outputs(this);
  }
}

export class UpdateMinChallengeRatioCall__Inputs {
  _call: UpdateMinChallengeRatioCall;

  constructor(call: UpdateMinChallengeRatioCall) {
    this._call = call;
  }

  get minChallengeRatio_(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class UpdateMinChallengeRatioCall__Outputs {
  _call: UpdateMinChallengeRatioCall;

  constructor(call: UpdateMinChallengeRatioCall) {
    this._call = call;
  }
}

export class UpdateProtocolFeeCall extends ethereum.Call {
  get inputs(): UpdateProtocolFeeCall__Inputs {
    return new UpdateProtocolFeeCall__Inputs(this);
  }

  get outputs(): UpdateProtocolFeeCall__Outputs {
    return new UpdateProtocolFeeCall__Outputs(this);
  }
}

export class UpdateProtocolFeeCall__Inputs {
  _call: UpdateProtocolFeeCall;

  constructor(call: UpdateProtocolFeeCall) {
    this._call = call;
  }

  get protocolFee_(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class UpdateProtocolFeeCall__Outputs {
  _call: UpdateProtocolFeeCall;

  constructor(call: UpdateProtocolFeeCall) {
    this._call = call;
  }
}

export class UpdateSubmitterCall extends ethereum.Call {
  get inputs(): UpdateSubmitterCall__Inputs {
    return new UpdateSubmitterCall__Inputs(this);
  }

  get outputs(): UpdateSubmitterCall__Outputs {
    return new UpdateSubmitterCall__Outputs(this);
  }
}

export class UpdateSubmitterCall__Inputs {
  _call: UpdateSubmitterCall;

  constructor(call: UpdateSubmitterCall) {
    this._call = call;
  }

  get submitter_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpdateSubmitterCall__Outputs {
  _call: UpdateSubmitterCall;

  constructor(call: UpdateSubmitterCall) {
    this._call = call;
  }
}
